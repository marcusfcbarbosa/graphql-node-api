"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const shared_utils_1 = require("@nestjs/common/utils/shared.utils");
const type_metadata_storage_1 = require("../storages/type-metadata.storage");
class DefinitionsFactory {
    static createForClass(target) {
        var _a;
        if (!target) {
            throw new Error(`Target class "${target}" passed in to the "DefinitionsFactory#createForClass()" method is "undefined".`);
        }
        let schemaDefinition = {};
        let parent = target;
        while (!shared_utils_1.isUndefined(parent.prototype)) {
            if (parent === Function.prototype) {
                break;
            }
            const schemaMetadata = type_metadata_storage_1.TypeMetadataStorage.getSchemaMetadataByTarget(parent);
            if (!schemaMetadata) {
                parent = Object.getPrototypeOf(parent);
                continue;
            }
            (_a = schemaMetadata.properties) === null || _a === void 0 ? void 0 : _a.forEach(item => {
                schemaDefinition = Object.assign({ [item.propertyKey]: item.options }, schemaDefinition);
            });
            parent = Object.getPrototypeOf(parent);
        }
        return schemaDefinition;
    }
}
exports.DefinitionsFactory = DefinitionsFactory;
